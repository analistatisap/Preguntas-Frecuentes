## Usa una imagen base ligera de Python
FROM python:3.10-slim

## Establece el directorio de trabajo dentro del contenedor
WORKDIR /app

## Copia el archivo de requisitos primero para aprovechar el cache de Docker
COPY requirements.txt /app/
RUN cat /app/requirements.txt

## Instala dependencias del sistema necesarias para python-ldap y Pillow
RUN apt-get update && apt-get install -y \
    gcc \
    libldap2-dev \
    libsasl2-dev \
    python3-dev \
    libssl-dev \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

## Instala las dependencias
RUN pip install --no-cache-dir -r requirements.txt || (cat /app/requirements.txt && exit 1)
RUN pip list


COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN sed -i 's/\r$//' /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh


COPY . /app/

RUN pip install psycopg2-binary
RUN pip show psycopg2-binary

ENV DJANGO_SETTINGS_MODULE=Preguntas_frecuentes.settings



## Recolecta archivos estáticos
RUN python manage.py collectstatic --noinput

## Expone el puerto en el que Gunicorn escuchará
EXPOSE 8000

## Usa el script como ENTRYPOINT para iniciar la aplicación
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

RUN python --version
RUN pip install --upgrade pip
RUN pip install Django==5.2.1