"""
Django settings for Preguntas_frecuentes project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from pathlib import Path
import os
from dotenv import load_dotenv

# Cargar las variables de entorno desde el archivo .env
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECRET_KEY se lee de la variable de entorno SECRET_KEY
# Se proporciona un valor por defecto para desarrollo si no está en .env o el entorno.
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-default-development-key-placeholder')


# Forzamos DEBUG a True para que los errores se muestren y logueen.
DEBUG = True
print(f"!!! DEBUG_STATUS: {DEBUG} (Forzado para depuración)")


# Permite cualquier host para asegurar que no sea un problema de ALLOWED_HOSTS.
# En producción, esto DEBE ser una lista explícita de tus dominios y IPs.
ALLOWED_HOSTS = ['*']


# Forzamos las credenciales de email directamente para ver si el problema es de envío SMTP.
# Esto bypassa la lectura del .env para estas variables.
EMAIL_HOST_USER = 'notificacionesaplicativoweb@grupodecor.com'
EMAIL_HOST_PASSWORD = '1Ngr3s0W3b2024*'
DEFAULT_FROM_EMAIL = 'notificacionesaplicativoweb@grupodecor.com'

print(f"!!! EMAIL_HOST_USER (Forzado): {EMAIL_HOST_USER}")
print(f"!!! EMAIL_HOST_PASSWORD (Forzado): {'*' * len(EMAIL_HOST_PASSWORD) if EMAIL_HOST_PASSWORD else 'None'}")
print(f"!!! DEFAULT_FROM_EMAIL (Forzado): {DEFAULT_FROM_EMAIL}")

# <<<<<<< MODIFICACIONES TEMPORALES PARA DEPURACIÓN - FIN >>>>>>>


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'contacto', # Asegúrate de que esta app exista y esté registrada
    'corsheaders', # Necesario para CORS
]

# Configuración de CORS
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # Para tu frontend de desarrollo (ej. Vite/React)
     #"172.16.29.5", # DESCOMENTAR Y AÑADIR el dominio de tu frontend en producción
]


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Middleware para CORS (DEBE IR AL PRINCIPIO)
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Preguntas_frecuentes.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Preguntas_frecuentes.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
# Directorio donde `collectstatic` reunirá todos los archivos estáticos para producción.
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración de Correo Electrónico
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.office365.com') # Lee de variable de entorno
EMAIL_PORT = int(os.environ.get('EMAIL_PORT', 587)) # Lee de variable de entorno, convierte a int
EMAIL_USE_TLS = True  # El puerto 587 típicamente usa STARTTLS.
# EMAIL_USE_SSL = False # Si usas TLS, SSL debe ser False. SSL se usa comúnmente con el puerto 465.

# Las siguientes variables de email ahora están forzadas en la sección de depuración temporal arriba.
# Las líneas originales de os.environ.get() están comentadas o no ejecutadas.
# EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')

# Comentamos o eliminamos la validación de credenciales de correo temporalmente,
# ya que ahora las forzamos en la sección de depuración.
# if not EMAIL_HOST_USER or not EMAIL_HOST_PASSWORD:
#     if not DEBUG:
#         from django.core.exceptions import ImproperlyConfigured
#         raise ImproperlyConfigured(
#             "EMAIL_HOST_USER y EMAIL_HOST_PASSWORD deben estar configurados en variables de entorno para producción."
#         )
#     else:
#         print("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
#         print("ADVERTENCIA (Desarrollo): EMAIL_HOST_USER y/o EMAIL_HOST_PASSWORD no están configurados.")
#         print("El envío de correos electrónicos que requieren autenticación SMTP probablemente fallará.")
#         print(f"EMAIL_HOST_USER actual: {EMAIL_HOST_USER}")
#         print("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")

# DEFAULT_FROM_EMAIL también está forzado en la sección de depuración temporal.
# Es recomendable que DEFAULT_FROM_EMAIL sea el mismo que EMAIL_HOST_USER
# o una dirección desde la cual EMAIL_HOST_USER tiene permiso para enviar.
# DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL', EMAIL_HOST_USER or 'webmaster@localhost')

# if DEFAULT_FROM_EMAIL == 'webmaster@localhost' and not os.environ.get('DEFAULT_FROM_EMAIL') and not EMAIL_HOST_USER and DEBUG:
#     print("**********************************************************************************************")
#     print(f"ADVERTENCIA: DEFAULT_FROM_EMAIL se ha establecido en '{DEFAULT_FROM_EMAIL}'.")
#     print("Esto ocurrió porque ni la variable de entorno DEFAULT_FROM_EMAIL ni EMAIL_HOST_USER están configuradas.")
#     print(f"Si su servidor SMTP ('{EMAIL_HOST}') requiere un remitente autenticado o específico, esto causará errores de envío.")
#     print("**********************************************************************************************")


