"""
Django settings for Preguntas_frecuentes project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from pathlib import Path
import os # Importar el módulo os
from dotenv import load_dotenv # Importar la función load_dotenv
load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/


SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-default-development-key-placeholder')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DJANGO_DEBUG', 'False') == 'True' # Lee DEBUG desde variable de entorno, por defecto False

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '172.16.29.5'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'contacto',
    'corsheaders',
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # Para tu frontend de desarrollo
    # "https://tu_frontend_en_produccion.com", # Añadir  dominio del frontend en producción
]


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Middleware para CORS	
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Preguntas_frecuentes.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Preguntas_frecuentes.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
# Directorio donde `collectstatic` reunirá todos los archivos estáticos para producción.
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# La configuración de CORS_ALLOWED_ORIGINS se movió más arriba para agruparla.

# Configuración de Correo Electrónico
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.office365.com') # Lee de variable de entorno, con valor por defecto para Office 365 SMTP
EMAIL_PORT = int(os.environ.get('EMAIL_PORT', 587)) # Lee de variable de entorno, convierte a int
EMAIL_USE_TLS = True  # El puerto 587 típicamente usa STARTTLS.
# EMAIL_USE_SSL = False # Si usas TLS, SSL debe ser False. SSL se usa comúnmente con el puerto 465.



EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER') # Si no está, será None
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD') # Si no está, será None

if not EMAIL_HOST_USER or not EMAIL_HOST_PASSWORD:
    if not DEBUG: # Solo lanzar error en producción (cuando DEBUG es False)
        from django.core.exceptions import ImproperlyConfigured
        raise ImproperlyConfigured(
            "EMAIL_HOST_USER y EMAIL_HOST_PASSWORD deben estar configurados en variables de entorno para producción."
        )
    else: # Mantener advertencias para desarrollo
        print("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
        print("ADVERTENCIA (Desarrollo): EMAIL_HOST_USER y/o EMAIL_HOST_PASSWORD no están configurados.")
        print("El envío de correos electrónicos que requieren autenticación SMTP probablemente fallará.")
        print(f"EMAIL_HOST_USER actual: {EMAIL_HOST_USER}")
        print("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")

# Es recomendable que DEFAULT_FROM_EMAIL sea el mismo que EMAIL_HOST_USER
# o una dirección desde la cual EMAIL_HOST_USER tiene permiso para enviar.
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL', EMAIL_HOST_USER or 'webmaster@localhost')

if DEFAULT_FROM_EMAIL == 'webmaster@localhost' and not os.environ.get('DEFAULT_FROM_EMAIL') and not EMAIL_HOST_USER and DEBUG:
    print("**********************************************************************************************")
    print(f"ADVERTENCIA: DEFAULT_FROM_EMAIL se ha establecido en '{DEFAULT_FROM_EMAIL}'.")
    print("Esto ocurrió porque ni la variable de entorno DEFAULT_FROM_EMAIL ni EMAIL_HOST_USER están configuradas.")
    print(f"Si su servidor SMTP ('{EMAIL_HOST}') requiere un remitente autenticado o específico, esto causará errores de envío.")
    print("**********************************************************************************************")