server {
    listen 80;
    server_name 172.16.29.5 localhost; 

    # Raíz para los archivos estáticos de tu frontend
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Configuración para servir los archivos estáticos del frontend
    location / {
        try_files $uri $uri/ /index.html; # Importante para SPAs (Single Page Applications)
                                         # Si un archivo o directorio no se encuentra, sirve index.html
                                         # para que el enrutamiento del lado del cliente de Vue funcione.
    }

    # Configuración para el proxy inverso a tu API Django
    # Asume que tu backend Django está accesible en 'http://127.0.0.1:8000'
    # 'django_backend' sería el nombre del servicio/contenedor de tu backend
    # si están en la misma red de Podman.
    # Si Django corre en el host en el puerto 8001, podrías usar 'http://host.containers.internal:8001'
    # o la IP del host.
    location /api/ {
        proxy_pass http://django_backend:8000/api/; # Asegúrate que la URL y el puerto sean correctos
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Opcional: para WebSockets si tu API los usa
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
    }

    # Opcional: Manejo de errores
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html; # O una ruta a páginas de error personalizadas
    }
}